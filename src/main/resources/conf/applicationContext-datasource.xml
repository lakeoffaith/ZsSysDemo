<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	<bean id="propertyConfigurer"
	  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  <property name="locations">
	    <list>
	      <value>classpath:jdbc.properties</value>
	    </list>
	  </property>
	</bean>

	<!-- 数据源 useUnicode=true&amp;characterEncoding=utf8 -->
	<bean id="ZsysDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--初始化时获取连接数，取值应在minPoolSize与maxPoolSize之间 -->
		<property name="initialPoolSize" value="15" />
		<!--最大空闲时间,多少秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800" />
		<!--连接池中保留的最大连接数。 -->
		<property name="maxPoolSize" value="100" />
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="10" />
		<!--每多少秒检查所有连接池中的空闲连接 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--连接测试sql语句 -->
		<property name="preferredTestQuery" value="SELECT 'x'" />
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="0" />
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->
		<property name="maxStatementsPerConnection" value="0" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--c3p0是异步操作的，缓慢的JDBC操作通过帮助进程完成。扩展这些操作可以有效的提升性能通过多线程实现多个操作同时被执行。Default: 3-->
        <property name="numHelperThreads" value="3" />
        <!--连接池用完时客户调用getConnection()后等待获取连接的时间，单位：毫秒。超时后会抛出-->  
		<!--SQLEXCEPTION，如果设置0，则无限等待。Default:0-->  
		<property name="checkoutTimeout" value="10000"/>  
	</bean>
</beans>
